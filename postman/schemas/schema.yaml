openapi: 3.0.0
info:
  version: '0.1'
  title: 'Music API'
servers:
  - url: 'https://839249c0-e159-4e26-b86b-6c11409a4c4b.mock.pstmn.io'
paths:
  /song:
    get:
      summary: 'getAllSongs'
      operationId: listAllSongs
      tags:
        - song
      responses:
        '200':
          description: 'Details about all songs'
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/allSongs'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: postSong
      operationId: addSong
      tags:
        - song
      requestBody:
        required: true
        description: 'Add a song to the DB'
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Song"
      responses:
        "201":
          description: 'Song added successfully'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Song"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /song/{id}:
    get:
      summary: 'getSong'
      operationId: listSong
      tags:
        - song
      parameters:
        - name: id
          in: path
          description: ID of the song
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'Details about a song by ID'
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /artist:
    get:
      summary: 'getAllArtists'
      operationId: listAllArtists
      tags:
        - artist
      responses:
        '200':
          description: 'Details about all artists'
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/allArtists'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: postArtist
      operationId: addArtist
      tags:
        - artist
      requestBody:
        required: true
        description: 'Add an artist to the DB'
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Artist"
      responses:
        "201":
          description: 'Artist added successfully'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Artist"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /artist/{id}:
    get:
      summary: 'getArtist'
      operationId: listArtist
      tags:
        - artist
      parameters:
        - name: id
          in: path
          description: ID of the Artist
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'Details about an Artist by ID'
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /album:
    get:
      summary: 'getAllAlbums'
      operationId: listAllAlbums
      tags:
        - album
      responses:
        '200':
          description: 'Details about all albums'
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/allAlbums'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: postAlbum
      operationId: addAlbum
      tags:
        - album
      requestBody:
        required: true
        description: 'Add an album to the DB'
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Album"
      responses:
        "201":
          description: 'Album added successfully'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Album"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /album/{id}:
    get:
      summary: 'getAlbum'
      operationId: listAlbum
      tags:
        - album
      parameters:
        - name: id
          in: path
          description: ID of the Album
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'Details about an album by ID'
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    allSongs:
      type: array
      description: "List of all songs"
      items:
        $ref: '#/components/schemas/Song'
    Song:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        link:
          type: string 
        artist:
          type: string
        album:
          type: string
        year:
          type: string
    allArtists:
      type: array
      description: "List of all artists"
      items:
        $ref: '#/components/schemas/Artist'
    Artist:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    allAlbums:
      type: array
      description: "List of all albums"
      items:
        $ref: '#/components/schemas/Album'
    Album:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
        artist:
          type: string
        year:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
security:
  - BasicAuth: []